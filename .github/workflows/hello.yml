name: Hello

on: [push]

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run a one-line script
      run: echo Hello, world!
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install
        run: yarn install
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: css
          path: build/css
  publish:
     needs: [build]
     runs-on: ubuntu-latest
     steps:
       - uses: actions/setup-node@v1
         with:
           node-version: 12
       - uses: actions/download-artifact@v1
         with:
           name: css
       - run: cat css/build.css
  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v2.7.0-action.test
          release_name: Release v2.7.0-action.test
          draft: false
          prerelease: true
      - uses: actions/download-artifact@v1
        with:
          name: css  
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./css/build/css
          asset_name: vanilla.css
          asset_content_type: text/css  
         
          
#   python:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.x
#       uses: actions/setup-python@v1
#       with:
#         python-version: '3.x' # Semantic version range syntax or exact version of a Python version
#     # You can test your matrix by printing the current Python version
#     - name: Display Python version
#       run: python -c "import sys; print(sys.version)"
#     - name: Install pip dependencies
#       run: pip3 install -r requirements.txt
#     - name: Run server
#       run: ./entrypoint 0.0.0.0:8666 &
#     - run: sleep 5
#     - name: Install upload-assets
#       run: sudo snap install upload-assets
#     - name: Run upload-assets
#       run: upload-assets
